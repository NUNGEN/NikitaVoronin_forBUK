class Level:
    def __init__(self, number, resources):
        self.number = number
        self.resources = resources
        self.alive = True

    def receive(self, amount):
        self.resources += amount

    def check(self, min_resources):
        if self.resources < min_resources:
            self.alive = False

    def status(self):
        state = "–≤ –∏–≥—Ä–µ" if self.alive else "–≤—ã—à–µ–ª"
        print(f"–£—Ä–æ–≤–µ–Ω—å {self.number}: {self.resources} —Ä–µ—Å—É—Ä—Å–æ–≤ ({state})")


class Game:
    def __init__(self, levels_count=10, fixed_loss=5, min_resources=10):
        self.levels = []
        self.fixed_loss = fixed_loss
        self.min_resources = min_resources
        self.total_resources = 100 * levels_count  # –û–±—â–∏–π –ø—É–ª —Ä–µ—Å—É—Ä—Å–æ–≤
        for i in range(levels_count):
            self.levels.append(Level(i + 1, 100))

    def play_turn(self):
        for i in range(len(self.levels)):
            level = self.levels[i]
            if not level.alive:
                continue

            print(f"\n–£—Ä–æ–≤–µ–Ω—å {level.number}")
            print(f"–¢–µ–∫—É—â–∏–µ —Ä–µ—Å—É—Ä—Å—ã: {level.resources}")
            print(f"–í—Å–µ–≥–æ —Ä–µ—Å—É—Ä—Å–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ: {self.total_resources}")

            try:
                keep = int(input("–°–∫–æ–ª—å–∫–æ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–µ–±–µ? "))
                pass_down = int(input("–°–∫–æ–ª—å–∫–æ –ø–µ—Ä–µ–¥–∞—Ç—å –≤–Ω–∏–∑? (–±—É–¥–µ—Ç –ø–æ—Ç–µ—Ä—è–Ω–æ 5 –µ–¥–∏–Ω–∏—Ü) "))
                share = int(input("–°–∫–æ–ª—å–∫–æ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å –¥—Ä—É–≥–∏–º–∏? "))
            except ValueError:
                print("–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞. –ü—Ä–æ–ø—É—Å–∫ —Ö–æ–¥–∞.")
                continue

            total = keep + pass_down + share
            if total > level.resources:
                print("–û—à–∏–±–∫–∞: –≤—ã —Ç—Ä–∞—Ç–∏—Ç–µ –±–æ–ª—å—à–µ, —á–µ–º —É –≤–∞—Å –µ—Å—Ç—å! –ü—Ä–æ–ø—É—Å–∫ —Ö–æ–¥–∞.")
                continue

            # 1. –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–µ —Å–µ–±–µ
            level.resources = keep
            self.total_resources -= (pass_down + share)  # –£–º–µ–Ω—å—à–∞–µ–º –æ–±—â–∏–π –ø—É–ª

            # 2. –ü–µ—Ä–µ–¥–∞—ë–º –≤–Ω–∏–∑ —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–æ—Ç–µ—Ä—è–º–∏
            if pass_down > 0 and i + 1 < len(self.levels):
                lost = min(self.fixed_loss, pass_down)
                sent_amount = pass_down - lost
                self.levels[i + 1].receive(sent_amount)
                print(f"–ü–µ—Ä–µ–¥–∞–Ω–æ –≤–Ω–∏–∑: {sent_amount} (–ø–æ—Ç–µ—Ä—è–Ω–æ {lost})")

            # 3. –î–µ–ª–∏–º—Å—è —Å –¥—Ä—É–≥–∏–º–∏ —Å —É—á—ë—Ç–æ–º –æ—Å—Ç–∞—Ç–∫–∞
            if share > 0:
                others = [j for j in range(len(self.levels)) if j != i and self.levels[j].alive]
                if others:
                    per_level = share // len(others)
                    remainder = share % len(others)  # –û—Å—Ç–∞—Ç–æ–∫ - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ—Ç–µ—Ä–∏
                    
                    for j in others:
                        self.levels[j].receive(per_level)
                    
                    print(f"–ü–æ–¥–µ–ª–µ–Ω–æ —Å –¥—Ä—É–≥–∏–º–∏: {per_level} –Ω–∞ —É—Ä–æ–≤–µ–Ω—å (–ø–æ—Ç–µ—Ä—è–Ω–æ {remainder})")
                    self.total_resources -= remainder  # –£—á–∏—Ç—ã–≤–∞–µ–º –æ—Å—Ç–∞—Ç–æ–∫ –∫–∞–∫ –ø–æ—Ç–µ—Ä—é

            # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–∂–∏–≤–∞–Ω–∏—è
            level.check(self.min_resources)

    def show_status(self):
        print("\n--- –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Å–µ—Ö —É—Ä–æ–≤–Ω–µ–π ---")
        for level in self.levels:
            level.status()
        print(f"–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Å—É—Ä—Å–æ–≤: {self.total_resources}")

    def is_game_over(self):
        alive = [level for level in self.levels if level.alive]
        return len(alive) == 0

    def run(self):
        turn = 1
        while not self.is_game_over():
            print(f"\n========== –•–û–î {turn} ==========")
            self.play_turn()
            self.show_status()
            turn += 1
            if self.total_resources <= 0:
                print("\n‚ö† –†–µ—Å—É—Ä—Å—ã –≤ —Å–∏—Å—Ç–µ–º–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å!")
                break
        print("\nüéÆ –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞. –í—Å–µ —É—Ä–æ–≤–Ω–∏ –≤—ã–±—ã–ª–∏.")


if __name__ == "__main__":
    game = Game()
    game.run()